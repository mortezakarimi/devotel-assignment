volumes:
  db-data:

networks:
  # Network for services that need to be exposed to the host
  public-net:
    driver: bridge

  # Private network for internal backend communication
  private-net:
    driver: bridge
    internal: true # This prevents external access

services:
  database:
    image: postgres:${DATABASE_VERSION:-16}-alpine
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_DATABASE:-db_name}
      POSTGRES_USER: ${DATABASE_USERNAME:-db_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-!ChangeMe!}
    expose:
      - 5432

    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_DATABASE}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    # The database is ONLY connected to the private network
    networks:
      - private-net
    restart: unless-stopped

  server:
    build:
      context: .
      target: production
    image: ${COMPOSE_PROJECT_NAME}-prod
    container_name: ${COMPOSE_PROJECT_NAME}-server
    env_file:
      - .env.example # Change it to proper .env file
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    # The server is connected to both networks so it can talk to the
    # database (private) and be exposed to the host (public).
    networks:
      - public-net
      - private-net
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
